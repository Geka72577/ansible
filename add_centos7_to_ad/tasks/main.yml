---
# tasks file for add_centos7_to_ad

  - name: Find name of network interface
    shell: "ip -o link show | awk -F': ' '{print $2}' | grep -i ^e | head -1"
    register: output_interface

  - name: Ensure that the variable PEERDNS set in "yes"
    lineinfile:
     path: /etc/sysconfig/network-scripts/ifcfg-{{ output_interface.stdout }}
     regexp: '^PEERDNS'
     line: PEERDNS=yes
    register: output_peerdns

  - name: Specify DNS1
    lineinfile:
     path: /etc/sysconfig/network-scripts/ifcfg-{{ output_interface.stdout }}
     regexp: '^DNS1'
     line: DNS1={{ DNS1 }} 
    register: output_dns1
    when: DNS1 is defined

  - name: Specify DNS2
    lineinfile:
     path: /etc/sysconfig/network-scripts/ifcfg-{{ output_interface.stdout }}
     regexp: '^DNS2'
     line: DNS2={{ DNS2 }} 
    register: output_dns2
    when: DNS2 is defined
  
  - name: Ensure that DNS1 and DNS2 set in dhclient.conf file
    lineinfile:
       path: /etc/dhcp/dhclient.conf
       regexp: 'supersede domain-name'
       line: 'supersede domain-name-servers {{ DNS1 }}, {{ DNS2 }};'
    register: output_centos_dns12
    when: (DNS1 is defined) and (DNS2 is defined)
    ignore_errors: yes

  - name: Ensure that DNS1 set in dhclient.conf file
    lineinfile:
     path: /etc/dhcp/dhclient.conf
     regexp: 'supersede domain-name'
     line: 'supersede domain-name-servers {{ DNS1 }};'
    register: output_centos_dns1
    when: (DNS1 is defined) and (output_centos_dns12.changed == false) and (DNS2 is undefined)
    ignore_errors: yes

  - name: Ensure that DNS2 set in dhclient.conf file
    lineinfile:
     path: /etc/dhcp/dhclient.conf
     regexp: 'supersede domain-name'
     line: 'supersede domain-name-servers {{ DNS2 }};'
    register: output_centos_dns2
    when: (DNS2 is defined) and (output_centos_dns1.changed == false) and (DNS1 is undefined )
    ignore_errors: yes

  - name: restart network interface
    service:
     name: network
     state: restarted
    when: output_peerdns.changed == true or output_dns1.changed == true or output_dns2.changed == true or output_centos_dns12.changed == true or output_centos_dns1.changed == true or output_centos_dns2.changed == true 

  - name: install packages
    include_tasks: install.j2
    loop: "{{package_for_install}}"

  - name: Check if the instance in the Active Directory
    command: id {{ user_ad }}@{{ domain_ad }}
    register: result
    ignore_errors: yes
   
  - block:
    - name: Join the instance to the Active Directory
      shell: echo '{{ user_ad_password }}' | realm join -U {{ user_ad }}@{{ domain_ad }} {{ domain_ad }}  --verbose
      register: output

    - name: "Result of joining"
      debug:
        var: output.stderr

    - name: Generate SSSD file for Centos
      template:
        src: sssd_centos.j2
        dest: /etc/sssd/sssd.conf
        owner: root
        group: root
        mode: '0600'
        follow: yes

    - name: restart sssd
      service:
        name: sssd
        state: restarted
    when: result.rc != 0

  - name: Check if SSH service to allow password authentication
    command: grep '^PasswordAuthentication[[:blank:]]*yes' /etc/ssh/sshd_config
    register: result_ssh
    ignore_errors: yes

  - name: Set the SSH service to allow password authentication
    lineinfile:
     path: '/etc/ssh/sshd_config'
     regexp: '^PasswordAuthentication'
     line:  'PasswordAuthentication yes'
    notify: 'Restart service sshd'
    when: result_ssh.rc != 0

  - name: Add comment to sudoers file and  validate with saving
    lineinfile:
      path: /etc/sudoers
      state: present
      line: '## Add the "AWS Delegated Administrators" group from the {{ domain_ad }} domain.'
      validate: /usr/sbin/visudo -cf %s

  - name: Add permissions for AD users and validate savings
    lineinfile:
      path: /etc/sudoers
      state: present
      line: "{{ group_ad }}"
      validate: /usr/sbin/visudo -cf %s

  - name: Check if the host was added to AD
    command: id {{ user_ad }}@{{ domain_ad }}
    register: finish_result 
    ignore_errors: yes
  
  - debug:
     msg:  "RESULT: Host {{ ansible_hostname }} with {{ ansible_default_ipv4.address }} was added to AD successfully"
    when: finish_result.rc == 0 

  - debug:
     msg:  "RESULT: Host {{ ansible_hostname }} with {{ ansible_default_ipv4.address }} wasn't added to AD successfully"
    when: finish_result.rc != 0
